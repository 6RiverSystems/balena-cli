diff --git a/node_modules/pkg/prelude/bootstrap.js b/node_modules/pkg/prelude/bootstrap.js
index b87902f..58cb7bc 100644
--- a/node_modules/pkg/prelude/bootstrap.js
+++ b/node_modules/pkg/prelude/bootstrap.js
@@ -1220,19 +1220,20 @@ function payloadFileSync(pointer) {
   // promises ////////////////////////////////////////////////////////
   // ///////////////////////////////////////////////////////////////
 
-  if (fs.promises !== undefined) {
-    var util = require('util');
-    fs.promises.open = util.promisify(fs.open);
-    fs.promises.read = util.promisify(fs.read);
-    fs.promises.write = util.promisify(fs.write);
-    fs.promises.readFile = util.promisify(fs.readFile);
-    fs.promises.readdir = util.promisify(fs.readdir);
-    fs.promises.realpath = util.promisify(fs.realpath);
-    fs.promises.stat = util.promisify(fs.stat);
-    fs.promises.lstat = util.promisify(fs.lstat);
-    fs.promises.fstat = util.promisify(fs.fstat);
-    fs.promises.access = util.promisify(fs.access);
-  }
+	// Disable fs.promises patching as eg `fs.promises.open` returns an object not a number like a promisified `fs.open` returns
+  // if (fs.promises !== undefined) {
+  //   var util = require('util');
+  //   fs.promises.open = util.promisify(fs.open);
+  //   fs.promises.read = util.promisify(fs.read);
+  //   fs.promises.write = util.promisify(fs.write);
+  //   fs.promises.readFile = util.promisify(fs.readFile);
+  //   fs.promises.readdir = util.promisify(fs.readdir);
+  //   fs.promises.realpath = util.promisify(fs.realpath);
+  //   fs.promises.stat = util.promisify(fs.stat);
+  //   fs.promises.lstat = util.promisify(fs.lstat);
+  //   fs.promises.fstat = util.promisify(fs.fstat);
+  //   fs.promises.access = util.promisify(fs.access);
+  // }
 
   // ///////////////////////////////////////////////////////////////
   // INTERNAL //////////////////////////////////////////////////////
